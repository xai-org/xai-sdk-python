# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import auth_pb2 as xai_dot_api_dot_v1_dot_auth__pb2


class AuthStub(object):
    """An API service to check status of an API key.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_api_key_info = channel.unary_unary(
                '/xai_api.Auth/get_api_key_info',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_auth__pb2.ApiKey.FromString,
                _registered_method=True)


class AuthServicer(object):
    """An API service to check status of an API key.
    """

    def get_api_key_info(self, request, context):
        """Returns some information about an API key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_api_key_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_api_key_info,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_auth__pb2.ApiKey.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xai_api.Auth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('xai_api.Auth', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Auth(object):
    """An API service to check status of an API key.
    """

    @staticmethod
    def get_api_key_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Auth/get_api_key_info',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            xai_dot_api_dot_v1_dot_auth__pb2.ApiKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
