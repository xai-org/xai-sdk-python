# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import models_pb2 as xai_dot_api_dot_v1_dot_models__pb2


class ModelsStub(object):
    """An API service that let users get details of available models on the
    platform.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListLanguageModels = channel.unary_unary(
                '/xai_api.Models/ListLanguageModels',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.ListLanguageModelsResponse.FromString,
                _registered_method=True)
        self.ListEmbeddingModels = channel.unary_unary(
                '/xai_api.Models/ListEmbeddingModels',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.ListEmbeddingModelsResponse.FromString,
                _registered_method=True)
        self.ListImageGenerationModels = channel.unary_unary(
                '/xai_api.Models/ListImageGenerationModels',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.ListImageGenerationModelsResponse.FromString,
                _registered_method=True)
        self.GetLanguageModel = channel.unary_unary(
                '/xai_api.Models/GetLanguageModel',
                request_serializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.LanguageModel.FromString,
                _registered_method=True)
        self.GetEmbeddingModel = channel.unary_unary(
                '/xai_api.Models/GetEmbeddingModel',
                request_serializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.EmbeddingModel.FromString,
                _registered_method=True)
        self.GetImageGenerationModel = channel.unary_unary(
                '/xai_api.Models/GetImageGenerationModel',
                request_serializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_models__pb2.ImageGenerationModel.FromString,
                _registered_method=True)


class ModelsServicer(object):
    """An API service that let users get details of available models on the
    platform.
    """

    def ListLanguageModels(self, request, context):
        """Lists all language models available to your team (based on the API key).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEmbeddingModels(self, request, context):
        """Lists all embedding models available to your team (based on the API key).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListImageGenerationModels(self, request, context):
        """Lists all image generation models available to your team (based on the API key).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLanguageModel(self, request, context):
        """Get details of a specific language model by model name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmbeddingModel(self, request, context):
        """Get details of a specific embedding model by model name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageGenerationModel(self, request, context):
        """Get details of a specific image generation model by model name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListLanguageModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLanguageModels,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.ListLanguageModelsResponse.SerializeToString,
            ),
            'ListEmbeddingModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEmbeddingModels,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.ListEmbeddingModelsResponse.SerializeToString,
            ),
            'ListImageGenerationModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImageGenerationModels,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.ListImageGenerationModelsResponse.SerializeToString,
            ),
            'GetLanguageModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLanguageModel,
                    request_deserializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.LanguageModel.SerializeToString,
            ),
            'GetEmbeddingModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmbeddingModel,
                    request_deserializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.EmbeddingModel.SerializeToString,
            ),
            'GetImageGenerationModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageGenerationModel,
                    request_deserializer=xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_models__pb2.ImageGenerationModel.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xai_api.Models', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('xai_api.Models', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Models(object):
    """An API service that let users get details of available models on the
    platform.
    """

    @staticmethod
    def ListLanguageModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/ListLanguageModels',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.ListLanguageModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEmbeddingModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/ListEmbeddingModels',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.ListEmbeddingModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListImageGenerationModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/ListImageGenerationModels',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.ListImageGenerationModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLanguageModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/GetLanguageModel',
            xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.LanguageModel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEmbeddingModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/GetEmbeddingModel',
            xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.EmbeddingModel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImageGenerationModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Models/GetImageGenerationModel',
            xai_dot_api_dot_v1_dot_models__pb2.GetModelRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_models__pb2.ImageGenerationModel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
