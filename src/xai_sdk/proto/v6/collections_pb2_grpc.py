# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import collections_pb2 as xai_dot_api_dot_v1_dot_collections__pb2


class CollectionsStub(object):
    """An API service to manage collections.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCollection = channel.unary_unary(
                '/collections.Collections/CreateCollection',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.CreateCollectionRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
                _registered_method=True)
        self.ListCollections = channel.unary_unary(
                '/collections.Collections/ListCollections',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsResponse.FromString,
                _registered_method=True)
        self.DeleteCollection = channel.unary_unary(
                '/collections.Collections/DeleteCollection',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.DeleteCollectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetCollectionMetadata = channel.unary_unary(
                '/collections.Collections/GetCollectionMetadata',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.GetCollectionMetadataRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
                _registered_method=True)
        self.ListAvailableEmbeddingModels = channel.unary_unary(
                '/collections.Collections/ListAvailableEmbeddingModels',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsResponse.FromString,
                _registered_method=True)
        self.ListAvailableTokenEncodings = channel.unary_unary(
                '/collections.Collections/ListAvailableTokenEncodings',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsResponse.FromString,
                _registered_method=True)
        self.UploadDocument = channel.unary_unary(
                '/collections.Collections/UploadDocument',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.UploadDocumentRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
                _registered_method=True)
        self.ListDocuments = channel.unary_unary(
                '/collections.Collections/ListDocuments',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsResponse.FromString,
                _registered_method=True)
        self.GetDocumentMetadata = channel.unary_unary(
                '/collections.Collections/GetDocumentMetadata',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.GetDocumentMetadataRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
                _registered_method=True)
        self.AddDocumentToCollection = channel.unary_unary(
                '/collections.Collections/AddDocumentToCollection',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.AddDocumentToCollectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RemoveDocumentFromCollection = channel.unary_unary(
                '/collections.Collections/RemoveDocumentFromCollection',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.RemoveDocumentFromCollectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateDocument = channel.unary_unary(
                '/collections.Collections/UpdateDocument',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.UpdateDocumentRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
                _registered_method=True)
        self.ReIndexDocument = channel.unary_unary(
                '/collections.Collections/ReIndexDocument',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ReIndexDocumentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateCollection = channel.unary_unary(
                '/collections.Collections/UpdateCollection',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.UpdateCollectionRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
                _registered_method=True)
        self.BatchGetDocuments = channel.unary_unary(
                '/collections.Collections/BatchGetDocuments',
                request_serializer=xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsResponse.FromString,
                _registered_method=True)


class CollectionsServicer(object):
    """An API service to manage collections.
    """

    def CreateCollection(self, request, context):
        """Create a collection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCollections(self, request, context):
        """List all the collections a team has.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollection(self, request, context):
        """Delete a specific collection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionMetadata(self, request, context):
        """Get a collection's metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailableEmbeddingModels(self, request, context):
        """List available embeddings models to a given team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailableTokenEncodings(self, request, context):
        """List available token encodings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadDocument(self, request, context):
        """Upload a document.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocuments(self, request, context):
        """List documents.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentMetadata(self, request, context):
        """Retrieve document metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDocumentToCollection(self, request, context):
        """Add document to collection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDocumentFromCollection(self, request, context):
        """Remove document from collection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocument(self, request, context):
        """Update document's data and metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReIndexDocument(self, request, context):
        """Regenerate indices for the given document.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCollection(self, request, context):
        """Update collection's config.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetDocuments(self, request, context):
        """Get documents metadata in a batch request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CollectionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCollection,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.CreateCollectionRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.SerializeToString,
            ),
            'ListCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCollections,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsResponse.SerializeToString,
            ),
            'DeleteCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollection,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.DeleteCollectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCollectionMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionMetadata,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.GetCollectionMetadataRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.SerializeToString,
            ),
            'ListAvailableEmbeddingModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailableEmbeddingModels,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsResponse.SerializeToString,
            ),
            'ListAvailableTokenEncodings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailableTokenEncodings,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsResponse.SerializeToString,
            ),
            'UploadDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadDocument,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.UploadDocumentRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.SerializeToString,
            ),
            'ListDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocuments,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsResponse.SerializeToString,
            ),
            'GetDocumentMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentMetadata,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.GetDocumentMetadataRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.SerializeToString,
            ),
            'AddDocumentToCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDocumentToCollection,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.AddDocumentToCollectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveDocumentFromCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDocumentFromCollection,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.RemoveDocumentFromCollectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocument,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.UpdateDocumentRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.SerializeToString,
            ),
            'ReIndexDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.ReIndexDocument,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.ReIndexDocumentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCollection,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.UpdateCollectionRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.SerializeToString,
            ),
            'BatchGetDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetDocuments,
                    request_deserializer=xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'collections.Collections', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('collections.Collections', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Collections(object):
    """An API service to manage collections.
    """

    @staticmethod
    def CreateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/CreateCollection',
            xai_dot_api_dot_v1_dot_collections__pb2.CreateCollectionRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/ListCollections',
            xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.ListCollectionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/DeleteCollection',
            xai_dot_api_dot_v1_dot_collections__pb2.DeleteCollectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollectionMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/GetCollectionMetadata',
            xai_dot_api_dot_v1_dot_collections__pb2.GetCollectionMetadataRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAvailableEmbeddingModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/ListAvailableEmbeddingModels',
            xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableEmbeddingModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAvailableTokenEncodings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/ListAvailableTokenEncodings',
            xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.ListAvailableTokenEncodingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/UploadDocument',
            xai_dot_api_dot_v1_dot_collections__pb2.UploadDocumentRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/ListDocuments',
            xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.ListDocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/GetDocumentMetadata',
            xai_dot_api_dot_v1_dot_collections__pb2.GetDocumentMetadataRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddDocumentToCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/AddDocumentToCollection',
            xai_dot_api_dot_v1_dot_collections__pb2.AddDocumentToCollectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDocumentFromCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/RemoveDocumentFromCollection',
            xai_dot_api_dot_v1_dot_collections__pb2.RemoveDocumentFromCollectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/UpdateDocument',
            xai_dot_api_dot_v1_dot_collections__pb2.UpdateDocumentRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.DocumentMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReIndexDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/ReIndexDocument',
            xai_dot_api_dot_v1_dot_collections__pb2.ReIndexDocumentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/UpdateCollection',
            xai_dot_api_dot_v1_dot_collections__pb2.UpdateCollectionRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.CollectionMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/collections.Collections/BatchGetDocuments',
            xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_collections__pb2.BatchGetDocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
