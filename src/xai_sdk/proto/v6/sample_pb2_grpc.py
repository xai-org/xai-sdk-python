# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import sample_pb2 as xai_dot_api_dot_v1_dot_sample__pb2


class SampleStub(object):
    """An API service for sampling the responses of available language models.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SampleText = channel.unary_unary(
                '/xai_api.Sample/SampleText',
                request_serializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.FromString,
                _registered_method=True)
        self.SampleTextStreaming = channel.unary_stream(
                '/xai_api.Sample/SampleTextStreaming',
                request_serializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.SerializeToString,
                response_deserializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.FromString,
                _registered_method=True)


class SampleServicer(object):
    """An API service for sampling the responses of available language models.
    """

    def SampleText(self, request, context):
        """Get raw sampling of text response from the model inference.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SampleTextStreaming(self, request, context):
        """Get streaming raw sampling of text response from the model inference.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SampleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SampleText': grpc.unary_unary_rpc_method_handler(
                    servicer.SampleText,
                    request_deserializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.SerializeToString,
            ),
            'SampleTextStreaming': grpc.unary_stream_rpc_method_handler(
                    servicer.SampleTextStreaming,
                    request_deserializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.FromString,
                    response_serializer=xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xai_api.Sample', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('xai_api.Sample', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Sample(object):
    """An API service for sampling the responses of available language models.
    """

    @staticmethod
    def SampleText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xai_api.Sample/SampleText',
            xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SampleTextStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/xai_api.Sample/SampleTextStreaming',
            xai_dot_api_dot_v1_dot_sample__pb2.SampleTextRequest.SerializeToString,
            xai_dot_api_dot_v1_dot_sample__pb2.SampleTextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
